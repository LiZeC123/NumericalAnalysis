/*
是不是需要一个Reset某一行的功能呢？
在输入有问题的时候使用reset把某一行重置


需要改变输入的接口，干脆就直接使用cin的那个好了，需要一个resetonerow的函数，把某一行重置

注意：在基本矩阵运算的地方，直接在用户名字空间里面调用了数据，但是没有检验名字空间在不在
而且虽然*有重载，但是计算函数没有判断
巨大bug，需要尽快修复

需要计算特征向量与特征值的函数
	需要对多项式进行计算，这些应该包含在多项式的项目里面，包括基本的函数以及求零点之类的
=>解决思路：如果自是计算特征向量什么的，因为在程序内部处理，可以不使用多项式关于输入输出的函数
			但是如果需要解决本身就有参数的矩阵，那么需要解决如何输入多项式的问题
			看起来，最好的办法是在解释器里面可以创建相关的变量，然后直接调用相关的方法
			最后把这些变量方进去之类的
=>特征向量：如果只是计算特征向量，看起来可以创建一个额外的容器，其中包含的是多项式
			从而可以避免影响原来程序的功能，但是这样需要把基础的函数全部重写
			如果创建一个将int转化为多项式的构造函数，这样可以直接使用，重写的量也基本差不多
			(虽然构造的量差不多，但是多项式实现除法比较困难，所以还是不应该直接使用)

实现脚本语言解释
	问题的关键在与无法在文本中输入EOF，从而不能读取数据，考虑到数据与指令分离的思想
	一个解决方案就是增加一个加载数据的功能，导入指定的文件中的数据
	可以定义一个宏，从而在脚本中使用使用相对路径
	可以先使用重定向,之后在使用命令行参数

更多的函数
	可能还需要一个求幂的函数
	在脚本语言中可能还需要读取一定的参数，所以需要为这个语言设置输入输出语句
	不过因为矩阵运算非常的硬，所以输入输出可以缓一缓
	如果考虑到使用初等矩阵，那么需要一个叫eye的函数

调整结构
	重载运算符部分还是作为成员函数添加到类中比较好
	main函数中的硬编码还是需要调整

新功能
	简单的数字计算，可以考虑调用python，或者自己写一个堆栈解决 


Done:
总之，先做一个行初等变换的接口把

化为阶梯型的时候，需要检查一下，用来乘的数是不是0，如果是，需要进行一定的调整，比如交换行的位置
似乎并没有计算过程中被覆盖的问题啊，编程之前，来一题亲自按照算法计算一遍好了

似乎是每次化简行的key会被覆盖掉，所以把这个key取出来，保存一下，应该就可以了吧
(通过引用和不引用似乎已经完美的完成了这个问题了）

python计算的行列式，是浮点的，可以研究一下，是否有浮点的计算方法
行列式只需要化成阶梯型，然后乘以对角线的元素就可以了

注意，不要阶梯型的化简，很有可能某个地方就变成0了


未知数数量和非零列数相等且没有无解项时，方程组具有唯一解，此时调用反向迭代
但是还是要注意越界的问题
如果非零列数比未知数少，没有唯一解，直接化成三角形，然后逐行调用化简函数即可

所以需要一个计算rank的函数来判断是不是相等的
然后从rank的地方开始反向迭代，从而消除Xmun这个变量
所以需要一个判断某一行是不是0的函数（getpivot（）可以）
这样化成三角形的函数里面就不需要这个变量了
，把每次的元素记录下来就可以直接用于行列式(不要看成一列一列的消成0，而是看作某一行与剩下行的处理)
(到了最后一行，反正就是不能再消除了，所以肯定是可以结束的)
可以使用默认参数来控制函数流程，即，是否需要记录扩大的倍数
对于行列式的值来说，必须要保证最后的扩大倍数被除会去，而矩阵化简不需要

干脆所有的下划线开头的函数，都作为过程函数，不能单独调用


行列式的化简可能类似，所以可能需要调整各个函数的名称

需要有一个变量记录这些扩大，然后再最后在除掉，可能有除不尽的问题，输出的时候在考虑
可以表示成分数，或者直接变成浮点数吧
考虑到如果使用这个来计算方程的解，那么还是分数比较好

是不是可以做一个解释器
变量名的产生可以使用链表和map，用户new一个，链表里面就加一个，用户输入的名字存在map里面，或者直接
用结构存，然后可以随机寻址？

首先把矩阵化为阶梯型，然后系数化简，最后向上迭代，迭代的时候，可以考虑从最右边开始一列一列的消去未知数
如果这个实现起来比较困难，也可以考虑如何计算n阶行列式

http://www.icourse163.org/learn/uestc-1001615001?tid=1001690001#/learn/content?type=detail&id=1002203383&cid=1002323901&replay=true
8分钟，老师亲自演示如何使用行初等变换，解决矩阵化简问题


Another：
	提示符可以搞得有逼格一点啊，比如lizec@ideathink$
	还可以闲的蛋疼，做一个sudo，行化简需要密码之类的
	然后lizec直接root权限。。。












*/
